version: '3'
networks:
  local:
    driver: bridge
services:
  database:
    container_name: database
    image: postgres
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - 5432:5432

    environment:
      - POSTGRES_DB=jd_auto
      - POSTGRES_USER=jd_auto
      - POSTGRES_PASSWORD=jd_auto

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - database

  # simple monorepo use pm2 without docker
  # app:
  #   container_name: app
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   # entrypoint: pnpm db:sync && pnpm build
  #   restart: no
  #   depends_on:
  #     - database
  #   ports:
  #     - '3001:3001'
  #     - '3002:3002'
  ## ---OR--
  # web:
  #   container_name: web
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   # entrypoint: pnpm db:sync && pnpm build
  #   command:  sh -c 'cd apps/web && node express.js'   
  #   restart: no
  #   depends_on:
  #     - database
  #   ports:
  #     - '3002:3002'

  # admin:
  #   container_name: admin
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   # entrypoint: pnpm db:sync && pnpm build
  #   command:  sh -c 'cd apps/admin && node express.js'
  #   restart: no
  #   depends_on:
  #     - database
  #   ports:
  #     - '3001:3001'

  # I dont use caddy in docker because tls problem
  # caddy:
  #   container_name: caddy
  #   image: caddy:latest
  #   restart: always
  #   volumes:
  #     - ./volumes/caddy/Caddyfile:/etc/caddy/Caddyfile
  #   ports:
  #     - '80:80'
  #   depends_on:
  #     - database
  #     - adminer
  #   networks:
  #     local:
